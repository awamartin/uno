<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script type="module" src="https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.mjs"></script>
<script type="module">
  import Cookies from 'https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.mjs'
  //get uuid, store a new hash if one does not exist
  //the uuid is used to identify a returning player
  console.log(`Cookie = ${Cookies.get('uuid')}`);
  if (Cookies.get('uuid') == null) {
    Cookies.set('uuid', Math.random());
  }
  var uuid = Cookies.get('uuid');

  var playedWild = '';

  //socket
  /*
  var host = $('#externalIp').text();
  var webSocketHost = location.protocol === 'https:' ? 'wss://' : 'ws://';
  var socketurl = `${webSocketHost}${host}:65080`;
  console.log(socketurl);
  */
  var socket = io();
  socket.on('connect', () => {
    //on socket connection
    console.log(socket.connected);
    socket.emit('register', uuid);

    //misc buttons
    $("#deal_but").click(function () {
      socket.emit('deal', uuid);
    });
    $("#pick_but").click(function () {
      socket.emit('pickup', uuid);
    });
    $("#challenge_but").click(function () {
      socket.emit('challenge', uuid);
    });
    $("#drawCard_but").click(function () {
      socket.emit('drawCard', uuid);
    });
    $("#reset_but").click(function () {
      socket.emit('reset', uuid);
    });

    //wildcard selections
    $("#red_but").click(function () {
      socket.emit('playcard', { uuid: uuid, card: playedWild, wildColour: 'red' });
      $("#colours").hide();
    });
    $("#blue_but").click(function () {
      socket.emit('playcard', { uuid: uuid, card: playedWild, wildColour: 'blue' });
      $("#colours").hide();
    });
    $("#green_but").click(function () {
      socket.emit('playcard', { uuid: uuid, card: playedWild, wildColour: 'green' });
      $("#colours").hide();
    });
    $("#yellow_but").click(function () {
      socket.emit('playcard', { uuid: uuid, card: playedWild, wildColour: 'yellow' });
      $("#colours").hide();
    });

    //update state of misc items
    socket.on('state', data => {
      let discardTop = data.discardTop;
      let pileCount = data.pileCount;
      let discardCount = data.discardCount;
      let slapdownCount = data.slapdownCount;
      let drawAmount = data.drawAmount;
      let playerNext = data.playerNext;
      let dealerNext = data.dealerNext;
      let playerCount = data.playerCount;
      let inProgress = data.inProgress;
      let challengeEnabled = data.challengeEnabled;
      let drawEnabled = data.drawEnabled;
      let currentColour = data.currentColour;
      let reverseDirection = data.reverseDirection;

      console.log(data);

      $("#playerNext").text(playerNext);
      $("#dealerNext").text(dealerNext);
      $("#discardCount").text(discardCount);
      $("#slapdownCount").text(slapdownCount);
      $("#drawAmount").text(drawAmount);
      $("#currentColour").text(currentColour);
      $("#reverseDirection").text(reverseDirection);
      $("#pileCount").text(pileCount);
      $("#playerCount").text(playerCount);

      //update discard pile
      $("#discardTop").empty();
      let card = $('<img/>',
        {
          src: discardTop,
          width: '100px',
          class: "cards"
        });
      $("#discardTop").append(card);
      //show challenge buttons
      if (challengeEnabled && (playerNext == $("#playerName").text())) {
        $("#challenge").show();
      } else {
        $("#challenge").hide();
      }

      //show Your Deal text
      if (inProgress) {
        $("#yourdeal").hide();
        $("#deal_but").hide();
        $("#currentcolour").show();
        //Reverse Direction
        if (reverseDirection) {
          $("#clockwise").hide();
          $("#anticlockwise").show();
        } else {
          $("#clockwise").show();
          $("#anticlockwise").hide();
        }
        //show Your Turn text
        if (playerNext == $("#playerName").text()) {
          $("#yourturn").show();
		  if(!drawEnabled) {
			$("#pick_but").show();
			} else {
			$("#pick_but").hide();			
			}			
        } else {
          $("#yourturn").hide();
          $("#pick_but").hide();
        }
        //show drawCard buttons
        if (drawEnabled && (playerNext == $("#playerName").text())) {
          $("#drawCard").show();
          $("#drawCardtext").show();
          $("#pick_but").hide();
        } else {
          $("#drawCard").hide();
          $("#drawCardtext").hide();
        }

      } else {
        $("#challenge").hide();
        $("#drawCardtext").hide();
        $("#drawCard").hide();
        $("#pick_but").hide();
        $("#currentcolour").hide();
        $("#yourturn").hide();
        if (dealerNext == $("#playerName").text()) {
          $("#yourdeal").show();
          $("#deal_but").show();
        } else {
          $("#yourdeal").hide();
          $("#deal_but").hide();
        }
      }


      console.log(!$('yourturn').is(":hidden"));
      console.log(discardTop);
      //handle 1st card colour choice for wild
      let topCard = discardTop || '';
      if (playerNext == $("#playerName").text() && topCard.includes('wild') && wildColour == ' ') {

        playedWild = 'deal';
        $("#colours").show();
      }
    });

    //log message
    socket.on('message', text => {
      //add to log
      $("#messages").prepend(`${text}<br />`)
    });

    //force refresh
    socket.on('refresh', text => {
      location.reload();
    });

    socket.on('rechooseColour', () => {
      playedWild = 'challenge';
      $("#colours").show();
    });

    //player status is sent to a socket named as the player's uuid
    socket.on(uuid, player => {
      console.log(player);
      $("#hand").empty();
      $("#playerName").text(player.name);

      //add each card to the hand
      let card;
      jQuery.each(player.hand, (card) => {
        //we create a card like this so we can attach some logic to it
        card = $('<img/>',
          {
            src: player.hand[card],
            width: '100px',
            class: "cards",
            click: function () {
              console.log(`played ${jQuery(this).text()}`);
              if (jQuery(this).attr('src').includes('wild')) {
                $("#colours").show();
                playedWild = jQuery(this).attr('src');
              } else {
                socket.emit('playcard', { uuid: uuid, card: jQuery(this).attr('src') });
              }
            }
          });
        $("#hand").append(card);
      });
    });


  });

</script>


<head>
  <title>
    UNO
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
</head>

<body>
  <h1>
    UNO Game
  </h1>
  <p>
    <button class="button" id="deal_but">Deal</button>
    <button class="button" id="pick_but" hidden="true">Pick-up</button>
  </p>
  <table>
    <tbody>
      <tr style="height: 16px;">
        <td style="width: 250px; height: 16px;">
          <div>Your Name: <label id="playerName"></label></div>
        </td>
        <td style="width: 450px; height: 16px;">
          <div hidden="true" id="yourturn"><strong>Your turn!</strong></div>
        </td>
      </tr>
      <tr style="height: 16px;">
        <td style="width: 250px; height: 16px;">
          <div>Number of Players: <label id="playerCount"></label></div>
        </td>
        <td style="width: 450px; height: 16px;">
          <div hidden="true" id="currentcolour" class="c"><strong>Current Colour: <label id="currentColour"></strong>
          </div>
        </td>
      </tr>
      <tr style="height: 16px;">
        <td style="width: 250px; height: 16px;">
          <div>Next Turn: <label id="playerNext"></label></div>
        </td>
        <td style="width: 450px; height: 16px;">
          <div hidden="true" id="yourdeal"><strong>Your deal!</strong></div>
        </td>
      </tr>
      <tr style="height: 16px;">
        <td style="width: 250px; height: 16px;">
          <div>Cards in Pile: <label id="pileCount"></label></div>
        </td>
        <td style="width: 450px; height: 16px;">
          <div hidden="true" id="clockwise"><strong>Clockwise</strong></div>
          <div hidden="true" id="anticlockwise"><strong>Anti-Clockwise</strong></div>
        </td>
      </tr>
      <tr style="height: 16px;">
        <td style="width: 250px; height: 16px;">
          <div>Cards in Discard: <label id="discardCount"></label></div>
        </td>
        <td style="width: 450px; height: 16px;">&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <div>&nbsp;</div>
  <div>The Discard Pile:</div>
  <div id="discard" class="cards">
    <label id="discardTop"></label>
  </div>
  <div hidden="true" id="colours"><button class="button blue_but" id="blue_but">Blue</button><button
      class="button green_but" id="green_but">Green</button><button class="button red_but"
      id="red_but">Red</button><button class="button yellow_but" id="yellow_but">Yellow</button></div>
  <div hidden="true" id="challenge"><button class="button" id="challenge_but">Challenge</button></div>
  <div hidden="true" id="drawCardtext">Draw Cards: <label id="drawAmount"></div>
  <div hidden="true" id="drawCard"><button class="button" id="drawCard_but">Draw</button></div>
  <div>Your Hand:</div>
  <div id="hand" class="cards">

  </div>
  <div>
    Log:
  </div>
  <div id="messages">

  </div>
  <button class="button" id="reset_but">Reset Game</button>
</body>

</html>